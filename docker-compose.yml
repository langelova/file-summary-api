services:

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:${DB_PORT} # Uses DB_PORT from .env
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASS} # Injected from .env
      POSTGRES_USER: ${DB_USER}     # Injected from .env
      POSTGRES_DB: ${DB_NAME}       # Injected from .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s


  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    env_file:
      - .env
    environment:
      DB_HOST: db                    # Points to the "db" service
      DB_PORT: ${DB_PORT}            # Injected from .env
      DB_NAME: ${DB_NAME}            # Injected from .env
      DB_USER: ${DB_USER}            # Injected from .env
      DB_PASS: ${DB_PASS}            # Injected from .env
      CHATGPT_API_KEY: ${CHATGPT_API_KEY} # Injected from .env
    depends_on:
      db:
        condition: service_healthy
        restart: true
    volumes:
      - ./api:/home/user/api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: bash ./run_server.sh dev


volumes:
  db-data:

